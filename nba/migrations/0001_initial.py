# Generated by Django 4.1.1 on 2022-09-09 23:08

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Chart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("y_year", models.BooleanField(default=True)),
                ("x", models.CharField(max_length=100)),
                ("date", models.DateTimeField(default=datetime.datetime.now)),
                ("description", models.CharField(default=" ", max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "player_number",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("player", models.CharField(max_length=100)),
                ("birth_year", models.CharField(blank=True, max_length=100, null=True)),
                ("hof", models.BooleanField(default=False)),
                ("num_seasons", models.IntegerField()),
                ("first_seas", models.IntegerField()),
                ("last_seas", models.IntegerField()),
                (
                    "img_url",
                    models.TextField(
                        default="https://cdn.nba.com/manage/2021/07/NBA_75-690x588.jpg"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("email", models.CharField(max_length=300)),
                (
                    "pfp_url",
                    models.TextField(
                        default="https://st4.depositphotos.com/1000507/24489/v/600/depositphotos_244890858-stock-illustration-user-profile-picture-isolate-background.jpg"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Stat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Seas_id", models.CharField(blank=True, max_length=100, null=True)),
                ("Season", models.CharField(blank=True, max_length=100, null=True)),
                ("Position", models.CharField(max_length=100)),
                ("Age", models.CharField(blank=True, max_length=100, null=True)),
                ("Experience", models.CharField(blank=True, max_length=100, null=True)),
                ("League", models.CharField(blank=True, max_length=100, null=True)),
                ("Team", models.CharField(blank=True, max_length=100, null=True)),
                ("Games", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "Games_Started",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Minutes_Played_Per_Game",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Field_Goals_per_game",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Field_Goal_Attempts_per_game",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Field_Goal_percent",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "x3_Point_Field_Goals_per_game",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "x3_Point_Field_Goal_Attempts_per_game",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "x3_Point_Field_Goals_percent",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "x2_Point_Field_Goals_per_game",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "x2_Point_Field_Goal_Attempts_per_game",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "x2_Point_Field_Goals_percent",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Effective_Field_Goal_percent",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Free_Throws_per_game",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Free_Throw_Attempts_per_game",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Free_Throw_percent",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Offensive_Rebounds_game",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Defensive_Rebounds_game",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Total_Rebounds_per_game",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Assists_per_game",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Steals_per_game",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Blocks_per_game",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Turnovers_per_game",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Personal_Fouls_per_game",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Points_per_game",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Player_Efficiency_Rating",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "True_Shooting_percent",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "x3_Point_Attempt_Rate",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Free_Throw_Attempt_Rate",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Offensive_Rebounds_percent",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Defensive_Rebounds_percent",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Total_Rebounds_percent",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Assists_percent",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Steals_percent",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Blocks_percent",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Turnovers_percent",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Usage_percent",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Offensive_Win_Shares",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Defensive_Win_Shares",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("Win_Shares", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "Win_Shares_Per_48_Minutes",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Offensive_Box_Plus_Minus",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Defensive_Box_Plus_Minus",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "Box_Plus_Minus",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("VORP", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stats",
                        to="nba.player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Like",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("count", models.IntegerField(default=0)),
                (
                    "chart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to="nba.chart",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to="nba.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(default=" ")),
                (
                    "chart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="nba.chart",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="nba.user",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="chart",
            name="author",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="charts",
                to="nba.user",
            ),
        ),
        migrations.AddField(
            model_name="chart",
            name="player",
            field=models.ManyToManyField(related_name="charts", to="nba.player"),
        ),
    ]
